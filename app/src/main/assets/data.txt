{
  "guide": {
    "app_name": "BloodPressure Pro",
    "guide_step": [
      {
        "title": "Protecting the heart starts with healthy blood pressure",
        "content": "Understand the importance of blood pressure and take the first step to maintain cardiovascular health"
      },
      {
        "title": "Grasp blood pressure trends and predict a healthy future",
        "content": "Understand the importance of blood pressure and take the first step to maintain cardiovascular health"
      },
      {
        "title": "Record blood pressure and grasp the pulse of health",
        "content": "Understand the importance of blood pressure and take the first step to maintain cardiovascular health"
      }
    ],
    "next": [
      {
        "title": "Next"
      },
      {
        "title": "Next"
      },
      {
        "title": "Start Record"
      }
    ],
    "skip": "Skip",
    "start": "Start",
    "privacy": "Privacy policy",
    "agreement": "Use Agreement",
    "check": "Please check the privacy policy and user agreement is not checked"
  },
  "title": {
    "title_list": [
      {
        "title": "Home",
        "bottom": "Home"
      },
      {
        "title": "Record",
        "bottom": "Record"
      },
      {
        "title": "Information",
        "bottom": "Information"
      },
      {
        "title": "Settings",
        "bottom": "Settings"
      }
    ],
    "moreRecord": "More Record",
    "newRecord": "New Record",
    "editRecord": "Edit Record"
  },
  "setting": {
    "alarm": "Alarm",
    "language": "Language",
    "share": "Share",
    "privacy": "Privacy setting",
    "policy": "User Agreement",
    "contact": "Contact information",
    "mail": "abc@gmail.com"
  },
  "dialog": {
    "title": "Current minute\\'s time had data",
    "content": "Need cover current data?",
    "cancel": "Cancel",
    "confirm": "Confirm"
  },
  "record": {
    "diastolic": "Diastolic",
    "systolic": "Systolic",
    "add_now": "+ Record now",
    "new_time": "2023-08-04 14:35",
    "no": "No record!",
    "now": "Record now",
    "unit2": "/mmHg",
    "sys": "SYS",
    "dia": "DIA",
    "unit": "mmHg",
    "add_new": "+ New record",
    "more": "More",
    "set_time": "Record Time",
    "confirm": "Confirm",
    "record_toast": "Please maintain systolic blood pressure above diastolic blood pressure",
    "filter": [
      {
        "time": "Recent Records"
      },
      {
        "time": "This Week"
      },
      {
        "time": "Last 7 days"
      },
      {
        "time": "This Month"
      },
      {
        "time": "Last Month"
      },
      {
        "time": "All"
      }
    ]
  },
  "home_top": {
    "title": "Blood pressure record",
    "content": "Keep recording your blood pressure to understand your health status",
    "to": "To Record",
    "question": "Question and Answer"
  },
  "set_time": {
    "title": "Set time",
    "year": "Year",
    "month": "Month",
    "day": "Day",
    "hour": "Hour",
    "minute": "Minute",
    "overTime": "You choice time is exceed current time,please choice again",
    "overYear": "Please select any time within one year",
    "cancel": "Cancel",
    "confirm": "Confirm"
  },
  "record_level": [
    {
      "title": "Hypotension",
      "content": "(SYS &lt;90 or DIA &lt;60)",
      "des": "Stay adequately hydrated and exercise regularly."
    },
    {
      "title": "Normal",
      "content": "(SYS 90–119 and DIA 60–79)",
      "des": "Continue to maintain a healthy lifestyle. "
    },
    {
      "title": "Elevated",
      "content": "(SYS 120–129 and DIA 60–79)",
      "des": "Pay attention to your diet and reduce salt intake."
    },
    {
      "title": "Hypertension Stage 1",
      "content": "(SYS 130–139 or DIA 80–89)",
      "des": "Improve your lifestyle, exercise regularly, and manage your diet."
    },
    {
      "title": "Hypertension Stage 2",
      "content": "(SYS 140–180 or DIA 90–120)",
      "des": "Consult a doctor early on, as medication may be necessary."
    },
    {
      "title": "Hypertension crisis",
      "content": "(SYS 180+ or DIA 120+)",
      "des": "Seek medical advice promptly and develop an appropriate treatment plan."
    }
  ],
  "info": [
    {
      "title": "What is blood pressure?",
      "from": "https://medlineplus.gov/highbloodpressure.html",
      "content": "Blood pressure is the force of blood pushing against the walls of arteries. With each heartbeat, blood is pumped into the arteries. Blood pressure is highest when the heart beats and pumps blood, known as systolic pressure. When your heart is at rest between beats, your blood pressure decreases. This is called diastolic pressure.\n\t\tYour blood pressure reading is represented by these two numbers. Typically, the systolic value is higher than or comes before the diastolic value. For example, 120/80 means a systolic pressure of 120 and a diastolic pressure of 80."
    },
    {
      "title": "How is high blood pressure diagnosed?",
      "from": "https://medlineplus.gov/highbloodpressure.html",
      "content": "High blood pressure usually has no symptoms. Therefore the only way to determine whether you have this condition is by getting regular blood pressure checks from your healthcare provider. Your provider will use a gauge a stethoscope or electronic sensor and a blood pressure cuff. Before making a diagnosis he or she will take two or more readings at separate appointments."
    },
    {
      "title": "Types of Hypertension",
      "from": "https://medlineplus.gov/highbloodpressure.html",
      "content": "There are two main types of high blood pressure: primary (essential) hypertension and secondary hypertension.\n\t\tPrimary or essential hypertension is the most common type of high blood pressure. For most people with this type of blood pressure it gradually increases as they age.\n\t\tSecondary hypertension is caused by another medical condition or the use of certain medications. It usually improves after treating the underlying condition or discontinuing the medications that are causing it."
    },
    {
      "title": "Why Should I Be Concerned About Hypertension?",
      "from": "https://medlineplus.gov/highbloodpressure.html",
      "content": "When your blood pressure remains consistently high over time it forces your heart to work harder to pump blood leading to potential serious health problems such as heart attacks strokes heart failure and kidney failure."
    },
    {
      "title": "How Can I Prevent Hypertension?",
      "from": "https://medlineplus.gov/howtopreventhighbloodpressure.html",
      "content": "Healthy Diet: To help control blood pressure you should limit your intake of sodium (salt) and increase your dietary potassium. Eating low-fat foods and including plenty of fruits vegetables and whole grains is also important. The DASH (Dietary Approaches to Stop Hypertension) eating plan is an example of a diet plan that can help lower blood pressure.\n\t\tRegular Exercise: Physical activity can help you maintain a healthy weight and lower blood pressure. Aim for at least 2 and a half hours of moderate-intensity aerobic exercise per week or 1 hour and 15 minutes of high-intensity aerobic exercise. Aerobic exercises such as brisk walking involve any activity that raises your heart rate and requires more oxygen than usual."
    },
    {
      "title": "What Is Gestational Hypertension?",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Pregnancy-induced hypertension refers to elevated blood pressure that occurs during pregnancy. It typically begins after 20 weeks of pregnancy. You usually don't experience any other symptoms. In many cases it won't harm you or your baby and will resolve within 12 weeks after delivery. However it does increase your risk of future hypertension. Sometimes it can be severe and may lead to low birth weight or preterm birth. Some women with pregnancy-induced hypertension may indeed develop preeclampsia.\n\t\tChronic hypertension refers to high blood pressure that is present before or before the 20th week of pregnancy. Some women may have had this condition long before pregnancy but it's only discovered during prenatal blood pressure checks. Sometimes chronic hypertension can also lead to preeclampsia."
    },
    {
      "title": "Who Is at Risk for Pre-eclampsia?",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "You are at risk of developing preeclampsia if you have:\n\t\t- Pre-existing chronic hypertension or chronic kidney disease before pregnancy\n\t\t- Had high blood pressure or preeclampsia in a previous pregnancy\n\t\t- Obesity\n\t\t- Aged over 40\n\t\t- Expecting multiple babies (twins triplets etc.)\n\t\t- African American ethnicity\n\t\t- A family record of preeclampsia\n\t\t- Certain health conditions such as diabetes lupus or a tendency for blood clot formation (a condition that increases the risk of blood clots)\n\t\t- Undergoing in vitro fertilization egg donation or donor insemination"
    },
    {
      "title": "What Problems Does Pre-eclampsia Cause?",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Preeclampsia can lead to various complications including:\n\t\t- Placental abruption: Separation of the placenta from the uterine wall before delivery\n\t\t- Fetal growth restriction: Inadequate supply of nutrients and oxygen to the fetus resulting in poor growth\n\t\t- Premature birth: Delivering the baby before 37 weeks of pregnancy\n\t\t- Low birth weight baby: The baby is born with a lower weight than expected for their gestational age\n\t\t- Stillbirth: The loss of the baby before birth\n\t\t- Damage to organs and blood systems including the kidneys liver brain and other organs\n\t\t- Increased risk of heart disease for the mother\n\t\t- Eclampsia: A severe condition that can occur when preeclampsia affects the brain leading to seizures or coma\n\t\t- HELLP syndrome: A rare but serious condition involving damage to the liver and blood cells in women with preeclampsia or eclampsia"
    },
    {
      "title": "What Are the Symptoms of Pre-eclampsia?",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Preeclampsia can manifest with the following symptoms:\n\t\t- High blood pressure\n\t\t- Excessive protein in urine (known as proteinuria)\n\t\t- Swelling of the face and hands. Swelling in the feet might occur as well but it's common in many pregnancies and might not necessarily indicate a problem.\n\t\t- Persistent headache\n\t\t- Vision disturbances such as blurry vision or seeing spots\n\t\t- Pain in the upper right abdomen\n\t\t- Shortness of breath"
    },
    {
      "title": "How Is Pre-eclampsia Diagnosed?",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Delivery typically can cure preeclampsia. When making treatment decisions your provider considers several factors including the severity of the condition how far along you are in your pregnancy and the potential risks to you and your baby:\n\t\t1. If you are beyond 37 weeks of pregnancy your provider may consider inducing labor or performing a cesarean section.\n\t\t2. If you are less than 37 weeks pregnant your healthcare provider will closely monitor both you and your baby. This may involve blood and urine tests for you. Monitoring for the baby often includes ultrasounds fetal heart rate monitoring and assessing the baby's growth. You may need medications to control your blood pressure and prevent seizures. Some women might receive steroid injections to help the baby's lungs mature more quickly."
    },
    {
      "title": "DASH Diet Plan",
      "from": "https://medlineplus.gov/dasheatingplan.html",
      "content": "DASH stands for Dietary Approaches to Stop Hypertension. It is a diet plan based on research sponsored by the National Heart Lung and Blood Institute (NHLBI). The studies indicate that DASH can lower high blood pressure and improve cholesterol levels thereby reducing the risk of heart disease.\n\t\tThe DASH diet plan includes the following principles:\n\t\t1. Emphasize vegetables fruits and whole grains.\n\t\t2. Include low-fat or fat-free dairy products fish poultry legumes nuts and vegetable oils.\n\t\t3. Limit foods high in saturated fat. These foods include fatty meats full-fat dairy products and tropical oils like coconut oil palm kernel oil and palm oil.\n\t\t4. Restrict sugary beverages and sweets.\n\t\tIn addition to following the DASH diet other lifestyle changes can also help lower blood pressure. These include maintaining a healthy weight engaging in regular exercise and avoiding smoking."
    },
    {
      "title": "How Is Pre-eclampsia Diagnosed?",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Your healthcare provider will check your blood pressure and urine during each prenatal visit. If your blood pressure reading is high (140/90 or higher) especially after the 20th week of pregnancy your provider may want to conduct further tests. These tests might include blood tests and other laboratory examinations to look for excessive protein in your urine and other symptoms."
    }
  ]
}