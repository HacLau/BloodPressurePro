{
  "guide": {
    "app_name": "PressureTrack",
    "guide_step": [
      {
        "title": "Kickstart Cardiovascular Health with Healthy Blood Pressure",
        "content": "Take the initial step to comprehend the significance of blood pressure in safeguarding your heart."
      },
      {
        "title": "Track Blood Pressure Trends for a Healthier Tomorrow",
        "content": "Initiate the journey to cardiovascular well-being by understanding the critical role of blood pressure."
      },
      {
        "title": "Chart Health's Pulse with Recorded Blood Pressure",
        "content": "Begin your cardiovascular health journey by recognizing the importance of blood pressure."
      }
    ],
    "next": [
      {
        "title": "Next"
      },
      {
        "title": "Next"
      },
      {
        "title": "Start Record"
      }
    ],
    "skip": "Skip",
    "start": "Start",
    "privacy": "Privacy policy",
    "agreement": "Use Agreement",
    "check": "Please check the privacy policy and user agreement is not checked"
  },
  "title": {
    "title_list": [
      {
        "title": "Home",
        "bottom": "Home"
      },
      {
        "title": "Log",
        "bottom": "Log"
      },
      {
        "title": "Details",
        "bottom": "Details"
      },
      {
        "title": "Settings",
        "bottom": "Settings"
      }
    ],
    "moreRecord": "More Record",
    "newRecord": "New Record",
    "editRecord": "Edit Record"
  },
  "setting": {
    "alarm": "Alarm",
    "language": "Language",
    "share": "Share",
    "privacy": "Privacy setting",
    "policy": "User Agreement",
    "contact": "Contact information",
    "mail": "abc@gmail.com"
  },
  "dialog": {
    "title": "Current minute\\'s time had data",
    "content": "Need cover current data?",
    "cancel": "Cancel",
    "confirm": "Confirm"
  },
  "record": {
    "diastolic": "Diastolic",
    "systolic": "Systolic",
    "add_now": "+ Record now",
    "new_time": "2023-08-04 14:35",
    "no": "No record!",
    "now": "Record now",
    "unit2": "/mmHg",
    "sys": "SYS",
    "dia": "DIA",
    "unit": "mmHg",
    "add_new": "+ New record",
    "more": "More",
    "set_time": "Record Time",
    "confirm": "Confirm",
    "record_toast": "Please maintain systolic blood pressure above diastolic blood pressure",
    "filter": [
      {
        "time": "Recent Records"
      },
      {
        "time": "This Week"
      },
      {
        "time": "Last 7 days"
      },
      {
        "time": "This Month"
      },
      {
        "time": "Last Month"
      },
      {
        "time": "All"
      }
    ]
  },
  "home_top": {
    "title": "Blood pressure record",
    "content": "Keep recording your blood pressure to understand your health status",
    "to": "To Record",
    "question": "Question and Answer"
  },
  "set_time": {
    "title": "Set time",
    "year": "Year",
    "month": "Month",
    "day": "Day",
    "hour": "Hour",
    "minute": "Minute",
    "overTime": "You choice time is exceed current time,please choice again",
    "overYear": "Please select any time within one year",
    "cancel": "Cancel",
    "confirm": "Confirm"
  },
  "record_level": [
      {
        "title": "Hypotension",
        "content": "(SYS < 90 or DIA < 60)",
        "des": "Ensure proper hydration and incorporate regular exercise into your routine."
      },
      {
        "title": "Normal",
        "content": "(SYS 90–119 and DIA 60–79)",
        "des": "Maintain your healthy lifestyle practices."
      },
      {
        "title": "Elevated",
        "content": "(SYS 120–129 and DIA 60–79)",
        "des": "Pay attention to your diet and reduce salt intake."
      },
      {
        "title": "Hypertension Stage 1",
        "content": "(SYS 130–139 or DIA 80–89)",
        "des": "Enhance your lifestyle, engage in regular exercise, and manage your diet."
      },
      {
        "title": "Hypertension Stage 2",
        "content": "(SYS 140–180 or DIA 90–120)",
        "des": "Early consultation with a doctor is recommended; medication may be necessary."
      },
      {
        "title": "Hypertension Crisis",
        "content": "(SYS 180+ or DIA 120+)",
        "des": "Seek immediate medical advice and develop a suitable treatment plan."
      }
  ],
  "info": [
    {
      "title": "Understanding Blood Pressure",
      "from": "https://medlineplus.gov/highbloodpressure.html",
      "content": "Blood pressure is the force of blood pushing against the walls of arteries. It rises with each heartbeat, known as systolic pressure, and falls when the heart is at rest, known as diastolic pressure. Your blood pressure is represented by two numbers, with the systolic value usually higher. For example, 120/80 means a systolic pressure of 120 and a diastolic pressure of 80."
    },
    {
      "title": "Diagnosing High Blood Pressure",
      "from": "https://medlineplus.gov/highbloodpressure.html",
      "content": "High blood pressure often shows no symptoms. Regular checks by your healthcare provider, using a gauge, stethoscope, or electronic sensor, are crucial. Diagnosis involves multiple readings at separate appointments."
    },
    {
      "title": "Types of Hypertension",
      "from": "https://medlineplus.gov/highbloodpressure.html",
      "content": "There are two main types: primary (essential) hypertension, common and increasing with age, and secondary hypertension, caused by other conditions or certain medications. Treating the underlying cause usually improves secondary hypertension."
    },
    {
      "title": "Concerns About Hypertension",
      "from": "https://medlineplus.gov/highbloodpressure.html",
      "content": "Consistently high blood pressure forces the heart to work harder, potentially leading to serious health problems such as heart attacks, strokes, heart failure, and kidney failure."
    },
    {
      "title": "Preventing Hypertension",
      "from": "https://medlineplus.gov/howtopreventhighbloodpressure.html",
      "content": "Adopt a healthy diet, limiting sodium and increasing potassium. Embrace the DASH eating plan. Engage in regular exercise, aiming for at least 2.5 hours of moderate-intensity aerobic exercise per week. Maintain a healthy weight and avoid smoking."
    },
    {
      "title": "Gestational Hypertension",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Pregnancy-induced hypertension occurs after 20 weeks, often without symptoms. While usually resolving after delivery, it increases future hypertension risks. Severe cases may lead to complications like low birth weight or preeclampsia."
    },
    {
      "title": "Risk Factors for Pre-eclampsia",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Risk factors include pre-existing chronic conditions, previous high blood pressure or preeclampsia, obesity, advanced age, expecting multiple babies, African American ethnicity, family history, certain health conditions, and assisted reproductive technologies."
    },
    {
      "title": "Complications of Pre-eclampsia",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Complications include placental abruption, fetal growth restriction, premature birth, low birth weight, stillbirth, organ damage, increased risk of heart disease, eclampsia, and HELLP syndrome."
    },
    {
      "title": "Symptoms of Pre-eclampsia",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Symptoms include high blood pressure, excessive protein in urine (proteinuria), swelling of face and hands, possible swelling in feet (common in pregnancies), persistent headache, vision disturbances, and upper right abdominal pain, or shortness of breath."
    },
    {
      "title": "Diagnosis of Pre-eclampsia",
      "from": "https://medlineplus.gov/highbloodpressureinpregnancy.html",
      "content": "Prenatal visits include blood pressure and urine checks. High readings may lead to further tests like blood tests and other examinations for excessive protein and symptoms."
    }
  ]
}